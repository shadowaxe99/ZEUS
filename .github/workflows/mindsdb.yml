name: MindsDB Tests & Deploy

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
  # pull_request_target:
  pull_request:
    branches: [stable, staging]
    paths-ignore:
      - 'docs/**'
      - 'README.md'

jobs:
  code_checking:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4.7.0
      with:
        python-version: 3.9
    - name: Install flake8
      run: |
        pip install flake8==5.0.4 pycodestyle==2.9.1
      shell: bash
    - name: Static code checking
      run: |
        python3 -m flake8
      shell: bash
  matrix_prep:
    needs: code_checking
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3.5.3
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@v1.0.1
        with:
          filter: '[?runOnBranch==`${{ github.ref }}` || runOnBranch==`always`]'
  test:
    needs: matrix_prep
    strategy:
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    name: Tests
    runs-on: ${{ matrix.runs_on }}
    if: github.ref_type == 'branch'
    steps:
    - uses: actions/checkout@v3.5.3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        # temp
        pip install git+https://github.com/mindsdb/lightwood.git@staging --upgrade --no-cache-dir
        pip install --no-cache-dir .
        pip install -r requirements_test.txt
        pip uninstall pycodestyle -y && pip install pycodestyle==2.9.1  # temp fix while exist conflict in last version with flake8
      shell: bash
      env:
        ACCESS_KEY:  ${{ secrets.GH_ACCESS_KEY }}
        mindsdb_github_masterkey: ${{secrets.mindsdb_github_masterkey}}
    - name: Install staging mdb libraries if it's not mindsdb/stable
      if: ${{ github.ref != 'refs/heads/stable' }}
      run: |
          pip install git+https://github.com/mindsdb/mindsdb_sql.git@staging --upgrade --no-cache-dir
          pip install git+https://github.com/mindsdb/lightwood.git@staging --upgrade --no-cache-dir
          pip uninstall pycodestyle -y && pip install pycodestyle==2.9.1  # temp fix while exist conflict in last version with flake8
          pip install gluonts==0.11.4  # temp fix until next lightwood release (>23.1.2.1)
    - name: Run integration api and flow tests
      run: |

        if [ "$RUNNER_OS" == "Linux" ]; then
          # Unit tests
          # echo -e "\n===============\nUnit tests\n===============\n"
          cat mindsdb/interfaces/storage/db.py | grep integration

          env PYTHONPATH=./ pytest tests/unit/test_executor.py

          # need fix in LW. not working yet
          env PYTHONPATH=./ pytest tests/unit/test_project_structure.py

          # env PYTHONPATH=./ pytest tests/unit/ml_handlers/test_lightwood.py

          env PYTHONPATH=./ pytest tests/unit/test_predictor_params.py

          env PYTHONPATH=./ pytest tests/unit/test_mongodb_handler.py

          env PYTHONPATH=./ pytest tests/unit/test_mongodb_server.py

          env PYTHONPATH=./ pytest tests/unit/test_cache.py

          # MySQL API
          echo -e "\n===============test MySQL API===============\n"
          pytest -vx tests/integration_tests/flows/test_mysql_api.py
          #
          # MySQL binary API
          echo -e "\n===============test MySQL binary API===============\n"
          pytest -vx -k 'not TestMySqlApi' tests/integration_tests/flows/test_mysql_bin_api.py

          # echo -e "\n===============TS predictions===============\n"
          pytest -svx tests/integration_tests/flows/test_ts_predictions.py

          # HTTP
          echo -e "\n===============test HTTP===============\n"
          pytest -vx tests/integration_tests/flows/test_http.py

          # Company independent
          echo -e "\n===============test company independent===============\n"
          pytest -vx tests/integration_tests/flows/test_company_independent.py
        fi
      shell: bash
      env:
        CHECK_FOR_UPDATES: False
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}

  deploy_to_pypi:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/stable' && github.actor != 'mindsdbadmin'
    steps:
    - uses: actions/checkout@v3.5.3
    - name: Set up Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        echo ${{ github.ref }}
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME:  __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload dist/*
    - name: Install latest version from pypi to see that all is working
      run: |
        sleep 90
        pip install mindsdb

  create_version_file:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/stable' && github.actor != 'mindsdbadmin'
    steps:
    - uses: actions/checkout@v3.5.3
    - name: Set up Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: '3.7'
    - name: Create version files
      run: |
        python create_version_file.py beta

    - name: Sync version file to s3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks
      env:
        AWS_S3_BUCKET: 'mindsdb-installer'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'distributions/ver/dist'
        DEST_DIR: 'mindsdb-installer/ver'
