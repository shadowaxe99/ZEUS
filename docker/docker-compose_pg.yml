version: "3.2"

services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=mindsdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - type: bind
        source: ../var_db
        target: /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 1s
      retries: 15

  migrations:
    command: bash -c "cd /mindsdb && python ./mindsdb/migrations/migrate.py"

    <<: &globalSettings
      depends_on:
        db:
          condition: service_healthy
      build:
        context: ../
        dockerfile: ./docker/mindsdb.Dockerfile
      volumes:
        - type: bind
          source: ../
          target: /mindsdb
      environment:
        MINDSDB_STORAGE_DIR: "/mindsdb/var"
        MINDSDB_DB_CON: postgresql://postgres:postgres@db:5432/mindsdb

  mindsdb:
    # Copy global settings from migration above
    <<: *globalSettings
    restart: always
    ports:
      - '47334:47334'
      - '47335:47335'
    command: bash -c "cd /mindsdb && python -m mindsdb"
    environment:
      MINDSDB_EXECUTOR_URL: "http://executor:5002"
      MINDSDB_ML_SERVICE_URL: "http://ml_service:5001"
      MINDSDB_DB_SERVICE_URL: "http://db_service:5000"
      MINDSDB_DOCKER_ENV: "True"
      MINDSDB_STORAGE_DIR: "/mindsdb/var"
      MINDSDB_DB_CON: postgresql://postgres:postgres@db:5432/mindsdb
      FLASK_DEBUG: "1"
      FLASK_ENV: "development"
      FLASK_APP: "/mindsdb/mindsdb/__main__.py"
      SEPARATE_MIGRATIONS: "1"
    depends_on:
      - migrations
    healthcheck:
      test:  ["CMD", "curl", "-f", "http://localhost:47334/api/util/ping"]
      interval: 30s
      timeout: 4s
      retries: 100

        #   mysql_db:
        #     image: "mindsdb/mysql-handler-test"
        #     ports:
        #       - 3307:3306
        #     command: --secure-file-priv=/
        #     environment:
        #       MYSQL_ROOT_PASSWORD: "supersecret"
        #       MYSQL_DATABASE: "test"
        #     healthcheck:
        #       test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
        #       interval: 120s
        #       timeout: 4s
        #       retries: 100


  ml_service:
    build:
      context: ../
      dockerfile: ./docker/ml_handler.Dockerfile
    depends_on:
      - mindsdb
    volumes:
      - type: bind
        source: ../
        target: /mindsdb
    environment:
      # have to share mindsdb database, because it doens't work without it
      PORT: 5001
      MINDSDB_STORAGE_DIR: "/mindsdb/var"
      MINDSDB_DB_SERVICE_HOST: "db_service"
      MINDSDB_DB_SERVICE_PORT: 5000
      MINDSDB_DB_CON: postgresql://postgres:postgres@db:5432/mindsdb

  db_service:
    build:
      context: ../
      dockerfile: ./docker/db_handler.Dockerfile
    depends_on:
      - mindsdb
        # - mysql_db
    volumes:
      - type: bind
        source: ../
        target: /mindsdb
    environment:
      MINDSDB_STORAGE_DIR: "/mindsdb/var"
      MINDSDB_DB_CON: postgresql://postgres:postgres@db:5432/mindsdb

    healthcheck:
      test:  ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 120s
      timeout: 4s
      retries: 100

  executor:
    build:
      context: ../
      dockerfile: ./docker/executor.Dockerfile
    depends_on:
      - mindsdb
    environment:
      # have to share mindsdb database, because it doens't work without it
      PORT: 5002
      MINDSDB_STORAGE_DIR: "/mindsdb/var"
      MINDSDB_ML_SERVICE_URL: "http://ml_service:5001"
      MINDSDB_DB_SERVICE_URL: "http://db_service:5000"
      MINDSDB_DB_CON: postgresql://postgres:postgres@db:5432/mindsdb
    volumes:
      - type: bind
        source: ../
        target: /mindsdb
    healthcheck:
      test:  ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 120s
      timeout: 4s
      retries: 100
